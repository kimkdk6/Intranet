<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.AdminDAO">

	<!-- 게시판 종류 리스트 가져오기 -->
	<select id="getBoardListType" resultType="dto_vo.Board.BoardList">
		select * from boardlist 
		order by boardcode
	</select>
	
	<!-- 게시판 종류마다 게시글 가져오기 -->
	<select id="getBoardofNum" resultType="int">
		select count(*)
        from board b join boardlist l
                     on b.BOARDCODE = l.BOARDCODE
        where b.BOARDCODE = #{boardcode}
	</select>

	<!-- 게시판 추가 -->
	<insert id="insertBoard" parameterType="dto_vo.Board.BoardList">
		insert into boardlist(boardcode, boardname)
        values((select NVL(MAX(TO_NUMBER(boardcode))+1, 0) from boardlist), #{boardname})
	</insert>
	
	<!-- 게시판 삭제 -->
	<delete id="deleteBoardlist">
		delete from boardlist 
		where boardcode = #{boardcode}
	</delete>
	
	<!-- 게시판의 boardcode로 가져온 게시물 리스트 -->
	<select id="getBoardListbyType" resultType="dto_vo.Board.Board">
		select *
		from board b join boardlist l
        on b.BOARDCODE = l.BOARDCODE
		where l.BOARDCODE = #{boardcode}
	</select>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply">
		delete from reply 
		where boardnum = #{boardnum}
	</delete>

	<!-- 게시글 삭제 -->
	<delete id="deleteBoard">
		delete from board
		where boardnum = #{boardnum}
	</delete>
	
	<!-- 게시판 이름 수정 -->
	<update id="updateBoardName" parameterType="hashmap">
		update boardlist 
		set boardname = #{param2}
		where boardcode = #{param1}
	</update>
	
	<!-- 사원 목록 가져오기  -->
	<select id="getEmps" resultType="dto_vo.Emp.Emp">
		select e.userid, e.ename, d.deptname as deptcode, p.posname as poscode, e.emptel, e.empapprove
        from emp e join dept d 
                    on e.DEPTCODE = d.DEPTCODE
                    join position p
                    on e.POSCODE = p.POSCODE
        order by d.DEPTCODE
	</select>
	<!-- 사원 정보 목록 가져오기 -->
	<select id="getEmpInfo" resultType="dto_vo.Emp.Empinfo">
		select *
		from empinfo
		where userid = #{userid}
	</select>	
	<!-- 사원 가져오기  -->
	<select id="getEmp" resultType="dto_vo.Emp.Emp">
		 select e.userid, e.ename, d.deptname as deptcode, p.posname as poscode, t.teamname as teamcode, e.emptel, e.empapprove
         from emp e join dept d 
                    on e.DEPTCODE = d.DEPTCODE
                    join position p
                    on e.POSCODE = p.POSCODE
                    join team t
                    on e.TEAMCODE = t.TEAMCODE
         where e.userid = #{userid}
	</select>
	<!-- 팀 가져오기 -->
	<select id="getTeamList" resultType="dto_vo.Emp.Team">
		select *
		from team
		where deptcode = #{deptcode}
	</select>
	
	<!-- 회원 승인 -->
	<update id="updateEmpApprove" parameterType="hashmap">
		 update emp 
		 set empapprove=1, emptel=#{param2}
		 where userid = #{param1}
	</update>
	
	<!-- 회원 정보 수정 -->
	<!--  userid,  emptel,  deptcode,  teamcode,  poscode -->
	<update id="updateEmp" parameterType="hashmap">
		 update emp set
   		 emptel = #{param2}, deptcode=#{param3}, teamcode=#{param4}, poscode=#{param5}
     	 where userid= #{param1}
	</update>
	 
</mapper>