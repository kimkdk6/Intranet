<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.SignDAO">
	
	<!-- 결재문서함>미결재문서 리스트 가져오기-->
	<select id="getUnSigns" parameterType="hashmap" resultType="dto_vo.Sign.Sign">
		<!-- select *
		from sign s join signline sl
		on s.DOCNUM = sl.DOCNUM
		where signstate = 0 and sl.SIGNNING = #{userid}
		order by s.DRAFTDATE desc -->
		 select * from (
            select rownum, a.DOCNUM, a.USERID, a.SIGNTYPE, a.SIGNSTATE, a.DEPT, a.TEAM, a.DRAFTDATE, 
                    a.SIGNTITLE, a.ENAME, a.POSNAME, a.TOTALSIGN, a.CURRSIGN, a.REFRESHDATE
            from (
                      select s.DOCNUM, s.USERID, s.SIGNTYPE, s.SIGNSTATE, s.DEPT, s.TEAM, s.DRAFTDATE, 
                              s.SIGNTITLE, s.ENAME, s.POSNAME, s.TOTALSIGN, s.CURRSIGN, s.REFRESHDATE
                      from sign s join signline sl
                      on s.DOCNUM = sl.DOCNUM
                      where signstate = 0 and sl.SIGNNING = #{param1}
                      order by s.REFRESHDATE desc
                    ) a
            where rownum between ${param2} and ${param3}
     	)
	</select>
	
	<select id="getCountUnsigns" parameterType="hashmap" resultType="int">
		select count(*)
		from sign s join signline sl
		on s.DOCNUM = sl.DOCNUM
		where signstate = 0 and sl.SIGNNING = #{param1}
	</select>
	
	
	<!-- 결재문서함>받은 결재 완료 문서 리스트 가져오기-->
	<select id="getReceiveSigns" parameterType="hashmap" resultType="dto_vo.Sign.Sign">
		<!-- select *
		from sign s join signline sl
		on s.DOCNUM = sl.DOCNUM
		where signstate = 0 and sl.SIGNNING = #{userid}
		order by s.DRAFTDATE desc -->
		 select * from (
            select rownum, a.DOCNUM, a.USERID, a.SIGNTYPE, a.SIGNSTATE, a.DEPT, a.TEAM, a.DRAFTDATE, 
                    a.SIGNTITLE, a.ENAME, a.POSNAME, a.TOTALSIGN, a.CURRSIGN, a.REFRESHDATE
            from (
                      select *
                      from sign  
                      where signstate = 1 and (signer2 = #{param1} or signer3 = #{param1} or signer4 = #{param1} or signer5 = #{param1})
                      order by REFRESHDATE desc
                    ) a
            where rownum between ${param2} and ${param3}
     	)
	</select>
	
	<select id="getCountReceiveSigns" parameterType="hashmap" resultType="int">
		select count(*)
		from sign 
		where signstate = 1 and (signer2 = #{param1} or signer3 = #{param1} or signer4 = #{param1} or signer5 = #{param1})
	</select>
	
	<!-- 개인문서함>상신문서 리스트 가져오기 -->
	 <select id="getSendSigns" parameterType="hashmap" resultType="dto_vo.Sign.Sign">
		select * from (
            select rownum, a.DOCNUM, a.USERID, a.SIGNTYPE, a.SIGNSTATE, a.DEPT, a.TEAM, a.DRAFTDATE, 
                    a.SIGNTITLE, a.ENAME, a.POSNAME, a.TOTALSIGN, a.CURRSIGN, a.SIGNNING, a.REFRESHDATE
            from (
                      select s.DOCNUM, s.USERID, s.SIGNTYPE, s.SIGNSTATE, s.DEPT, s.TEAM, s.DRAFTDATE, 
                              s.SIGNTITLE, s.ENAME, s.POSNAME, s.TOTALSIGN, s.CURRSIGN, s.REFRESHDATE, sl.SIGNNING
                      from sign s join signline sl
                      on s.DOCNUM = sl.DOCNUM
                      where signstate = ${param4} and s.USERID = #{param1}
                      order by s.REFRESHDATE desc
                    ) a
            where rownum between ${param2} and ${param3}
     	)
	</select> 
	
	<select id="getCountSendSigns" parameterType="hashmap" resultType="int"> 
		select count(*)
        from sign 
        where signstate = ${param2} and USERID = #{param1}
	</select>
	
	<!-- 결재 문서 상세보기 문서 하나 가져오기 -->
	<select id="getSign" resultType="dto_vo.Sign.Sign">
		select * 
		from sign
		where docnum = #{docnum}
	</select> 
	
	<!-- 결재 > 기안서 상세보기 가져오기 -->
	<select id="getDraftingdoc" resultType="dto_vo.Sign.Draftingdoc">
		select * 
		from DRAFTINGDOC
		where docnum = #{docnum}
	</select>
	
	<!-- 결재 > 휴가계 상세보기 가져오기 -->
	<select id="getHolidaydoc" resultType="dto_vo.Sign.Holidaydoc">
		select * 
		from HOLIDAYDOC
		where docnum = #{docnum}
	</select>
	
	<!-- 결재 > 출장 보고서 상세보기 가져오기 -->
	<select id="getBizTripdoc" resultType="dto_vo.Sign.Biztripdoc">
	 	select *
	 	from biztripdoc
	 	where docnum = #{docnum}
	</select>
	
	<!-- 결재 > 발주서 목록 가져오기 -->
	<select id="getOrderdoc" resultType="dto_vo.Sign.Orderdoc">
		select * 
		from orderdoc 
		where docnum = #{docnum}
	</select>
	
	<!-- 결재 라인 가져오기  -->
	<select id="getSignline" resultType="dto_vo.Sign.Signline">
		select * 
		from signline
		where docnum = #{docnum}
	</select>
	
	<!-- 부서 목록 가져오기  -->
	<select id="getDepts" resultType="dto_vo.Emp.Dept">
		select *
		from dept
	</select>
	
	<!-- 사원 목록 가져오기  -->
	<select id="getEmps" resultType="dto_vo.Emp.Emp">
		select *
		from emp
	</select>
	<!-- 사원 가져오기  -->
	<select id="getEmp" resultType="dto_vo.Emp.Emp">
		 select e.userid, e.ename, d.deptname as deptcode, p.posname as poscode
         from emp e join dept d 
                    on e.DEPTCODE = d.DEPTCODE
                    join position p
                    on e.POSCODE = p.POSCODE
         where e.userid = #{userid}
	</select>
	<!-- 팀 목록 가져오기  -->
	<select id="getTeams" resultType="dto_vo.Emp.Team">
		select *
		from team
	</select>
	<!-- 직급 목록 가져오기  -->
	<select id="getPositions" resultType="dto_vo.Emp.Position">
		select *
		from position
	</select>
	
	<!-- 결재 작성 -->
	<insert id="insertSign" parameterType="dto_vo.Sign.Sign" >
		insert into sign(docnum, userid, signtype, dept, team,  
                 		 signfilesrc, signtitle, signnote, 
               		     signer1, signer2, signer3, signer4, signer5,
                 		 ename, posname, totalsign, currsign)
                  values((select NVL(MAX(TO_NUMBER(docnum))+1, 0) from sign), #{userid}, #{signtype}, #{dept}, #{team}, 
                         #{signfilesrc, jdbcType=VARCHAR}, #{signtitle}, #{signnote, jdbcType=VARCHAR}, 
                         #{signer1, jdbcType=VARCHAR}, #{signer2, jdbcType=VARCHAR}, 
                         #{signer3, jdbcType=VARCHAR}, #{signer4, jdbcType=VARCHAR}, #{signer5, jdbcType=VARCHAR},
                         #{ename}, #{posname}, #{totalsign}, #{currsign})
	</insert>
	<!-- 결재 라인 작성 -->
	<insert id="insertSignline" parameterType="dto_vo.Sign.Signline">
		insert into SIGNLINE(docnum, signok1, signok2, signok3, signok4, signok5, signning)
            		  values((select NVL(MAX(TO_NUMBER(docnum)), 0) from sign), 
            		  		 #{signok1}, #{signok2}, #{signok3}, #{signok4}, #{signok5}, #{signning})
	</insert>
	
	<!-- 기안서 작성 -->
	<insert id="insertDrafting" parameterType="dto_vo.Sign.Draftingdoc">
		insert into DRAFTINGDOC(docnum, dracontent)
            			 values((select NVL(MAX(TO_NUMBER(docnum)), 0) from sign), #{dracontent})
	</insert>

	<!-- 발주서 작성 -->
	<insert id="insertOrderDoc" parameterType="dto_vo.Sign.Orderdoc">
		insert into orderdoc
			   values((select NVL(MAX(TO_NUMBER(docnum)), 0) from sign),
			   			(select NVL(MAX(TO_NUMBER(itemnum))+1, 0) from orderdoc), #{product},
			   			#{unitcost}, #{amount}, #{ordersize}, #{ordernote, jdbcType=VARCHAR}, #{ordercost})
	</insert>

	<!-- 휴가계 작성 -->
	<insert id="insertHolidaydoc" parameterType="dto_vo.Sign.Holidaydoc">
	 	insert into holidaydoc 
	 	values((select NVL(MAX(TO_NUMBER(docnum)), 0) from sign), #{holstart}, #{holend}, #{holtype}, #{holreason}, #{destination})
	</insert>

	<!-- 출장 신청서 작성 -->
	<insert id="insertBizTripDoc" parameterType="dto_vo.Sign.Biztripdoc" >
		insert into biztripdoc 
		values((select NVL(MAX(TO_NUMBER(docnum)), 0) from sign), #{bizstart}, #{bizend}, #{bizloc}, #{bizpur})
	</insert>
	
	<!-- 출장 결과 보고서 작성 -->
	<insert id="insertBizTripRep" parameterType="dto_vo.Sign.Biztriprep">
		
	</insert>

	<!-- 결재시 signline singok, signning 변경  -->
	<update id="updateSignline" parameterType="hashmap">
		<!-- update signline set signok2 = 1, signning = 'm5' where docnum=27 -->
		update signline
		set ${param1} = ${param4}, signning = #{param2}
		where docnum = #{param3}
	</update>
	
	<!-- 결재문서의 현재 결재 수 변경 -->
	<update id="updateSignCurr">
		<!-- update sign set currsign = currsign+1 where docnum=27 -->
		update sign
		set currsign = currsign + 1, refreshdate = sysdate
		where docnum = #{docnum}
	</update>
	
	<!-- 결재문서의 결재 상태 변경 -->
	<update id="updateSignState" parameterType="hashmap">
		 update sign 
		 set signstate = #{param2}, refreshdate = sysdate
		 where docnum = #{param1}
 	</update>
</mapper>
